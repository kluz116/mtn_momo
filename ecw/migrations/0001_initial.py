# Generated by Django 4.2.13 on 2024-06-25 12:01

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountHolder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=50)),
                ('surname', models.CharField(max_length=50)),
                ('msisdn', models.CharField(max_length=50)),
                ('accountholderstatus', models.CharField(max_length=50)),
                ('profilename', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Amount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField()),
                ('currency', models.CharField(max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='AppLogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.TextField(blank=True)),
                ('headers', models.TextField(blank=True)),
                ('body', models.TextField(blank=True)),
                ('logtimestamp', models.DateTimeField(default='2024-06-25T15:01:16')),
            ],
        ),
        migrations.CreateModel(
            name='BookingTimestamp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('branch_code', models.CharField(max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='DepositFunds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bankcode', models.CharField(default='FTBLUGKA', max_length=30)),
                ('accountnumber', models.CharField(blank=True, default='20680300000', max_length=15, null=True)),
                ('amount', models.FloatField(max_length=15)),
                ('receiver', models.CharField(max_length=35)),
                ('transactiontimestamp', models.DateTimeField(default='2024-06-25T15:01:16')),
                ('currency', models.CharField(default='UGX', max_length=5)),
                ('banktransactionid', models.CharField(max_length=100)),
                ('message', models.TextField()),
                ('receiverfirstname', models.CharField(max_length=50)),
                ('receiversurname', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('trx_batchid', models.CharField(max_length=50)),
                ('trx_serialid', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='EcwGroup',
            fields=[
                ('group_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.group')),
                ('description', models.TextField(blank=True)),
            ],
            bases=('auth.group',),
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.CreateModel(
            name='TransactionTimestamp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Xsignature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x_signature', models.TextField(blank=True, null=True)),
                ('paymentinstructionid', models.CharField(max_length=35)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentInstructionResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, default='PENDING', max_length=50, null=True)),
                ('paymentinstructionid', models.CharField(max_length=20)),
                ('banktransactionid', models.CharField(blank=True, max_length=100, null=True)),
                ('amount', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='ecw.amount')),
                ('bookingtimestamp', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='ecw.bookingtimestamp')),
                ('transactiontimestamp', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='ecw.transactiontimestamp')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentInstructionRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paymentinstructionid', models.CharField(max_length=20)),
                ('receiverbankcode', models.CharField(max_length=20)),
                ('receiveraccountnumber', models.CharField(max_length=20)),
                ('receiverfirstname', models.CharField(blank=True, max_length=50, null=True)),
                ('receiversurname', models.CharField(blank=True, max_length=50, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('transmissioncounter', models.CharField(max_length=255, null=True)),
                ('transactionid', models.CharField(max_length=255, null=True)),
                ('bookingtimestamp', models.CharField(blank=True, max_length=25, null=True)),
                ('banktransactionid', models.CharField(blank=True, max_length=100, null=True)),
                ('random_challenge', models.CharField(blank=True, max_length=50, null=True)),
                ('response_status', models.CharField(blank=True, default='PENDING', max_length=50, null=True)),
                ('amount', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='ecw.amount')),
                ('transactiontimestamp', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='ecw.transactiontimestamp')),
            ],
        ),
        migrations.CreateModel(
            name='EcwUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('operator_id', models.CharField(max_length=255, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('firstname', models.CharField(blank=True, max_length=50)),
                ('lastname', models.CharField(blank=True, max_length=50)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('needs_password_change', models.BooleanField(default=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ecw.branch')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ecw.ecwgroup')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
